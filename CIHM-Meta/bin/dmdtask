#!/usr/bin/env perl

use strict;
use warnings;
use FindBin;
use lib "$FindBin::RealBin/../lib";
use Getopt::Long;
use CIHM::Meta::Dmdtask;
use Fcntl qw(:DEFAULT :flock);
use Try::Tiny;
use Log::Log4perl;

Log::Log4perl->init_once("/etc/canadiana/tdr/log4perl.conf");
my $logger = Log::Log4perl::get_logger("CIHM::TDR");

my $lockfile = '/var/lock/tdr/dmdtask';
$lockfile = $ENV{dmdtask_lockfile} if ( exists $ENV{dmdtask_lockfile} );

my $pagesize = 40;
$pagesize = $ENV{dmdtask_pagesize} if ( exists $ENV{dmdtask_pagesize} );

my $swift_server;
$swift_server = $ENV{SWIFT_server} if ( exists $ENV{SWIFT_server} );

my $swift_user;
$swift_user = $ENV{SWIFT_user} if ( exists $ENV{SWIFT_user} );

my $swift_password;
$swift_password = $ENV{SWIFT_password} if ( exists $ENV{SWIFT_password} );

my $swift_account;
$swift_account = $ENV{SWIFT_account} if ( exists $ENV{SWIFT_account} );

my $swift_access_metadata;
$swift_access_metadata = $ENV{SWIFT_access_metadata}
  if ( exists $ENV{SWIFT_access_metadata} );

my $couchdb_access;
$couchdb_access = $ENV{COUCHDB_ACCESS} if ( exists $ENV{COUCHDB_ACCESS} );

my $couchdb_dmdtask;
$couchdb_dmdtask = $ENV{COUCHDB_DMDTASK} if ( exists $ENV{COUCHDB_DMDTASK} );

my $couchdb_wipmeta;
$couchdb_wipmeta = $ENV{COUCHDB_WIPMETA} if ( exists $ENV{COUCHDB_WIPMETA} );

GetOptions(
    'lockfile:s'              => \$lockfile,
    'pagesize:i'              => \$pagesize,
    'swift_server:s'          => \$swift_server,
    'swift_user:s'            => \$swift_user,
    'swift_password:s'        => \$swift_password,
    'swift_account:s'         => \$swift_account,
    'swift_access_metadata:s' => \$swift_access_metadata,
    'couchdb_access:s'        => \$couchdb_access,
    'couchdb_dmdtask:s'       => \$couchdb_dmdtask,
    'couchdb_wipmeta:s'       => \$couchdb_wipmeta,
);

# Only allow one instance to run at a time..
sysopen( FH, $lockfile, O_WRONLY | O_CREAT )
  or die "can't open lockfile=$lockfile: $!\n";
flock( FH, LOCK_EX | LOCK_NB )
  or exit 0;

die "couchdb_dmdtask is mandatory (environment or parameter)\n"
  if ( !$couchdb_dmdtask );
$couchdb_dmdtask = noEndSlash($couchdb_dmdtask);

try {
    CIHM::Meta::Dmdtask->new(
        {
            pagesize              => $pagesize,
            swift_server          => $swift_server,
            swift_user            => $swift_user,
            swift_password        => $swift_password,
            swift_account         => $swift_account,
            swift_access_metadata => $swift_access_metadata,
            couchdb_access        => $couchdb_access,
            couchdb_dmdtask       => $couchdb_dmdtask,
            couchdb_wipmeta       => $couchdb_wipmeta,
            logger                => $logger
        }
    )->dmdtask;
}
catch { $logger->error("$_"); };

sub noEndSlash {
    my ($url) = @_;

    $url =~ s|/*$||;
    return $url;
}

1;
__END__
