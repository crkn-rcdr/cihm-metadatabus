#!/usr/bin/env perl

use strict;
use warnings;
use FindBin;
use lib "$FindBin::RealBin/../lib";
use Getopt::Long;
use CIHM::Meta::Hammer2;
use Fcntl qw(:DEFAULT :flock);

my $lockfile = '/var/lock/tdr/hammer2';
$lockfile = $ENV{hammer2_lockfile} if ( exists $ENV{hammer2_lockfile} );

my $couchdb_access;
$couchdb_access = $ENV{COUCHDB_ACCESS} if ( exists $ENV{COUCHDB_ACCESS} );

my $couchdb_canvas;
$couchdb_canvas = $ENV{COUCHDB_CANVAS} if ( exists $ENV{COUCHDB_CANVAS} );

my $couchdb_cosearch2;
$couchdb_cosearch2 = $ENV{COUCHDB_COSEARCH2}
  if ( exists $ENV{COUCHDB_COSEARCH2} );

my $couchdb_copresentation2;
$couchdb_copresentation2 = $ENV{COUCHDB_COPRESENTATION2}
  if ( exists $ENV{COUCHDB_COPRESENTATION2} );

my $swift_server;
$swift_server = $ENV{SWIFT_server} if ( exists $ENV{SWIFT_server} );

my $swift_user;
$swift_user = $ENV{SWIFT_user} if ( exists $ENV{SWIFT_user} );

my $swift_password;
$swift_password = $ENV{SWIFT_password} if ( exists $ENV{SWIFT_password} );

my $swift_account;
$swift_account = $ENV{SWIFT_account} if ( exists $ENV{SWIFT_account} );

my $swift_access_metadata;
$swift_access_metadata = $ENV{SWIFT_access_metadata}
  if ( exists $ENV{SWIFT_access_metadata} );

my $swift_access_files;
$swift_access_files = $ENV{SWIFT_access_files}
  if ( exists $ENV{SWIFT_access_files} );

my $swift_preservation_files;
$swift_preservation_files = $ENV{SWIFT_preservation_files}
  if ( exists $ENV{SWIFT_preservation_files} );

my $iiif_image_server;
$iiif_image_server = $ENV{IIIF_IMAGE_server}
  if ( exists $ENV{IIIF_IMAGE_server} );

my $iiif_image_password;
$iiif_image_password = $ENV{IIIF_IMAGE_password}
  if ( exists $ENV{IIIF_IMAGE_password} );

# Local parameters
my $skip     = 0;
my $maxprocs = 4;
my $limit;
my $timelimit;

# For processing a single slug, regardless of queue.
my $slug;

GetOptions(
    'lockfile:s'                => \$lockfile,
    'skip:i'                    => \$skip,
    'maxprocs:i'                => \$maxprocs,
    'limit:i'                   => \$limit,
    'timelimit:i'               => \$timelimit,
    'couchdb_access:s'          => \$couchdb_access,
    'couchdb_canvas:s'          => \$couchdb_canvas,
    'couchdb_cosearch2:s'       => \$couchdb_cosearch2,
    'couchdb_copresentation2:s' => \$couchdb_copresentation2,
    'slug:s'                    => \$slug,
    'swift_server:s'            => \$swift_server,
    'swift_user:s'              => \$swift_user,
    'swift_password:s'          => \$swift_password,
    'swift_account:s'           => \$swift_account,
    'swift_access_metadata:s'   => \$swift_access_metadata,
    'iiif_image_server:s'       => \$iiif_image_server,
    'iiif_image_password:s'     => \$iiif_image_password,

);

# Only allow one instance to run at a time..
sysopen( FH, $lockfile, O_WRONLY | O_CREAT )
  or die "can't open lockfile=$lockfile: $!\n";
flock( FH, LOCK_EX | LOCK_NB )
  or exit 0;

die "couchdb_access is mandatory (environment or parameter)\n"
  if ( !$couchdb_access );
$couchdb_access = noEndSlash($couchdb_access);

die "couchdb_canvas is mandatory (environment or parameter)\n"
  if ( !$couchdb_canvas );
$couchdb_canvas = noEndSlash($couchdb_canvas);

die "couchdb_cosearch2 is mandatory (environment or parameter)\n"
  if ( !$couchdb_cosearch2 );
$couchdb_cosearch2 = noEndSlash($couchdb_cosearch2);

die "couchdb_copresentation2 is mandatory (environment or parameter)\n"
  if ( !$couchdb_copresentation2 );
$couchdb_copresentation2 = noEndSlash($couchdb_copresentation2);

die "iiif_image_server is mandatory (environment or parameter)\n"
  if ( !$iiif_image_server );
$iiif_image_server = noEndSlash($iiif_image_server);

CIHM::Meta::Hammer2->new(
    {
        skip                    => $skip,
        maxprocs                => $maxprocs,
        limit                   => $limit,
        timelimit               => $timelimit,
        couchdb_access          => $couchdb_access,
        couchdb_canvas          => $couchdb_canvas,
        couchdb_cosearch2       => $couchdb_cosearch2,
        couchdb_copresentation2 => $couchdb_copresentation2,
        slug                    => $slug,
        swift_server            => $swift_server,
        swift_user              => $swift_user,
        swift_password          => $swift_password,
        swift_account           => $swift_account,
        access_metadata         => $swift_access_metadata,
        access_files            => $swift_access_files,
        preservation_files      => $swift_preservation_files,
        iiif_image_server       => $iiif_image_server,
        iiif_image_password     => $iiif_image_password,
    }
)->hammer;

sub noEndSlash {
    my ($url) = @_;

    $url =~ s|/*$||;
    return $url;
}

1;
__END__
