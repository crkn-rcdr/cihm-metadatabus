#!/usr/bin/env perl

use strict;
use warnings;
use FindBin;
use lib "$FindBin::RealBin/../lib";
use Getopt::Long;
use CIHM::Meta::Smelter;
use Fcntl qw(:DEFAULT :flock);

my $lockfile = '/var/lock/tdr/smelter';
$lockfile = $ENV{smelter_lockfile} if ( exists $ENV{smelter_lockfile} );

my $couchdb_access;
$couchdb_access = $ENV{COUCHDB_ACCESS}
  if ( exists $ENV{COUCHDB_ACCESS} );

my $couchdb_canvas;
$couchdb_canvas = $ENV{COUCHDB_CANVAS}
  if ( exists $ENV{COUCHDB_CANVAS} );

my $couchdb_dipstaging;
$couchdb_dipstaging = $ENV{COUCHDB_DIPSTAGING}
  if ( exists $ENV{COUCHDB_DIPSTAGING} );

# Preservation Swift

my $swift_preservation_server;
$swift_preservation_server = $ENV{SWIFT_preservation_server}
  if ( exists $ENV{SWIFT_preservation_server} );

my $swift_preservation_server_options =
  '{ "furl_options": { "timeout": 3600 } }';
$swift_preservation_server_options = $ENV{SWIFT_preservation_server_options}
  if ( exists $ENV{SWIFT_preservation_server_options} );

my $swift_preservation_user;
$swift_preservation_user = $ENV{SWIFT_preservation_user}
  if ( exists $ENV{SWIFT_preservation_user} );

my $swift_preservation_password;
$swift_preservation_password = $ENV{SWIFT_preservation_password}
  if ( exists $ENV{SWIFT_preservation_password} );

my $swift_preservation_account;
$swift_preservation_account = $ENV{SWIFT_preservation_account}
  if ( exists $ENV{SWIFT_preservation_account} );

my $swift_preservation_files;
$swift_preservation_files = $ENV{SWIFT_preservation_files}
  if ( exists $ENV{SWIFT_preservation_files} );

# Access Swift

my $swift_access_server;
$swift_access_server = $ENV{SWIFT_access_server}
  if ( exists $ENV{SWIFT_server} );

my $swift_access_server_options = '{ "furl_options": { "timeout": 3600 } }';
$swift_access_server_options = $ENV{SWIFT_access_server_options}
  if ( exists $ENV{SWIFT_access_server_options} );

my $swift_access_user;
$swift_access_user = $ENV{SWIFT_access_user}
  if ( exists $ENV{SWIFT_access_user} );

my $swift_access_password;
$swift_access_password = $ENV{SWIFT_access_password}
  if ( exists $ENV{SWIFT_access_password} );

my $swift_access_account;
$swift_access_account = $ENV{SWIFT_access_account}
  if ( exists $ENV{SWIFT_access_account} );

my $swift_access_metadata;
$swift_access_metadata = $ENV{SWIFT_access_metadata}
  if ( exists $ENV{SWIFT_access_metadata} );

my $swift_access_files;
$swift_access_files = $ENV{SWIFT_access_files}
  if ( exists $ENV{SWIFT_access_files} );

my $swift_retries = 5;
$swift_retries = $ENV{SWIFT_retries}
  if ( exists $ENV{SWIFT_retries} );

########

my $noid_server;
$noid_server = $ENV{NOID_server}
  if ( exists $ENV{NOID_server} );

my $iiif_image_server;
$iiif_image_server = $ENV{IIIF_IMAGE_server}
  if ( exists $ENV{IIIF_IMAGE_server} );

my $iiif_image_password;
$iiif_image_password = $ENV{IIIF_IMAGE_password}
  if ( exists $ENV{IIIF_IMAGE_password} );

# General
my $skip     = 0;
my $maxprocs = 4;
my $limit;
my $timelimit;
my $descending;
my $aip;
GetOptions(
    'lockfile:s'                    => \$lockfile,
    'skip:i'                        => \$skip,
    'maxprocs:i'                    => \$maxprocs,
    'limit:i'                       => \$limit,
    'timelimit:i'                   => \$timelimit,
    'descending'                    => \$descending,
    'aip:s'                         => \$aip,
    'couchdb_access:s'              => \$couchdb_access,
    'couchdb_canvas:s'              => \$couchdb_canvas,
    'couchdb_dipstaging:s'          => \$couchdb_dipstaging,
    'swift_access_server:s'         => \$swift_access_server,
    'swift_access_server_options:s' => \$swift_access_server_options,
    'swift_access_user:s'           => \$swift_access_user,
    'swift_access_password:s'       => \$swift_access_password,
    'swift_access_account:s'        => \$swift_access_account,
    'swift_access_metadata:s'       => \$swift_access_metadata,
    'swift_access_files:s'          => \$swift_access_files,
    'swift_preservation_server:s'   => \$swift_preservation_server,
    'swift_preservation_server_options:s' =>
      \$swift_preservation_server_options,
    'swift_preservation_user:s'     => \$swift_preservation_user,
    'swift_preservation_password:s' => \$swift_preservation_password,
    'swift_preservation_account:s'  => \$swift_preservation_account,
    'swift_preservation_files:s'    => \$swift_preservation_files,
    'swift_retries:i'               => \$swift_retries,
    'noid_server:s'                 => \$noid_server,
    'iiif_image_server:s'           => \$iiif_image_server,
    'iiif_image_password:s'         => \$iiif_image_password,
);

$swift_retries = int($swift_retries);
die "swift_retries must be a positive integer\n" if ( $swift_retries < 1 );

# Only allow one instance to run at a time..
sysopen( FH, $lockfile, O_WRONLY | O_CREAT )
  or die "can't open lockfile=$lockfile: $!\n";
flock( FH, LOCK_EX | LOCK_NB )
  or exit 0;

die "couchdb_access is mandatory (environment or parameter)\n"
  if ( !$couchdb_access );
$couchdb_access = noEndSlash($couchdb_access);

die "couchdb_canvas is mandatory (environment or parameter)\n"
  if ( !$couchdb_canvas );
$couchdb_canvas = noEndSlash($couchdb_canvas);

die "couchdb_dipstaging is mandatory (environment or parameter)\n"
  if ( !$couchdb_dipstaging );
$couchdb_dipstaging = noEndSlash($couchdb_dipstaging);

die "noid_server is mandatory (environment or parameter)\n"
  if ( !$noid_server );
$noid_server = noEndSlash($noid_server);

CIHM::Meta::Smelter->new(
    {
        skip                              => $skip,
        maxprocs                          => $maxprocs,
        limit                             => $limit,
        timelimit                         => $timelimit,
        descending                        => $descending,
        aip                               => $aip,
        couchdb_access                    => $couchdb_access,
        couchdb_canvas                    => $couchdb_canvas,
        couchdb_dipstaging                => $couchdb_dipstaging,
        swift_access_server               => $swift_access_server,
        swift_access_server_options       => $swift_access_server_options,
        swift_access_user                 => $swift_access_user,
        swift_access_password             => $swift_access_password,
        swift_access_account              => $swift_access_account,
        swift_access_metadata             => $swift_access_metadata,
        swift_access_files                => $swift_access_files,
        swift_preservation_server         => $swift_preservation_server,
        swift_preservation_server_options => $swift_preservation_server_options,
        swift_preservation_user           => $swift_preservation_user,
        swift_preservation_password       => $swift_preservation_password,
        swift_preservation_account        => $swift_preservation_account,
        swift_preservation_files          => $swift_preservation_files,
        swift_retries                     => $swift_retries,
        noid_server                       => $noid_server,
        iiif_image_server                 => $iiif_image_server,
        iiif_image_password               => $iiif_image_password,
    }
)->smelter;

sub noEndSlash {
    my ($url) = @_;

    $url =~ s|/*$||;
    return $url;
}

1;
__END__
